import json
import urllib, urllib2
import cookielib, Cookie
import time
import sqlite3
import os

searchterms=['[first]','(first)','first rage','first comic', 'first post']
exclusionterms=['[fixed]', '(fixed)', 'her first', 'his first', 'brother\'s first', 'sister\'s first']

class database:
    def __init__(self):
        db_is_new = not os.path.exists('firstbot.db')
        self.conn = sqlite3.connect('firstbot.db')
        self.cursor=self.conn.cursor()
        if db_is_new:
            self.cursor.execute('create table submission (name text primary key not null, isfirst integer not null);')
        self.conn.commit() 


    def check(self,name):
        self.cursor.execute('select * from submission where name = \''+ name + '\'')
        if len(self.cursor.fetchall()) > 0:
            return True
        else:
            return False

    def insert(self, name, isfirst):
        self.cursor.execute('insert into submission values(\''+ name+'\', \''+str(isfirst)+'\')')
        self.conn.commit()

def login():
    url="http://www.reddit.com/api/login/firstbot"
    values={'user':'firstbot', 'passwd':'password', 'api_type':'json'}
    cj=cookielib.CookieJar()
    data=urllib.urlencode(values)
    req=urllib2.Request(url,data)
    urlOpener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))
    response=urlOpener.open(req)
    text=response.read()
    jsonobj=json.loads(text)
    modhash=jsonobj['json']['data']['modhash']
    return([urlOpener, modhash])

def search(auth, db):
    urlOpener=auth[0]
    modhash=auth[1]
    url="http://www.reddit.com/r/fffffffuuuuuuuuuuuu/search.json?q=first&restrict_sr=on&sort=new"
    req=urllib2.Request(url)
    time.sleep(5)
    response=urlOpener.open(req)
    text=response.read()
    jsonobj=json.loads(text)
    for row in jsonobj['data']['children']:
        claimedfirst=False
        title=row['data']['title']
        for term in searchterms:
            if term in title.lower():
                claimedfirst=True
        for exterm in exclusionterms:
            if exterm in title.lower():
                claimedfirst=False

        if claimedfirst:
            author=row['data']['author']
            name=row['data']['name']
            created=row['data']['created']
            if not db.check(name):
                print(title)
                submissions=ragecount(auth, author, created)
                print(submissions)
                if submissions > 0:
                    report(auth,name, submissions,db)

def ragecount(auth, author, created):
    urlOpener=auth[0]
    modhash=auth[1]
    url="http://www.reddit.com/user/"+author+"/submitted.json"
    req=urllib2.Request(url)
    time.sleep(5)
    response=urlOpener.open(req)
    text=response.read()
    jsonobj=json.loads(text)
    submissioncount=0
    for row in jsonobj['data']['children']:
        if 'title' in row['data'].keys():
            title=row['data']['title']
            if row['data']['subreddit'] == 'fffffffuuuuuuuuuuuu':
                if row['data']['created'] < created:
                    submissioncount=submissioncount+1
    while jsonobj['data']['after'] is not None:
        afterurl=url+"?after="+jsonobj['data']['after']
        req=urllib2.Request(afterurl)
        time.sleep(5)
        response=urlOpener.open(req)
        text=response.read()
        jsonobj=json.loads(text)
        for row in jsonobj['data']['children']:
            if 'title' in row['data'].keys():
                title=row['data']['title']
                if row['data']['subreddit'] == 'fffffffuuuuuuuuuuuu':
                    if row['data']['created'] < created:
                        submissioncount=submissioncount+1
    return submissioncount
    
def report(auth, name, submissioncount,db):
    urlOpener=auth[0]
    modhash=auth[1]
    
    message="firstbot^beta - please take it easy on me!\n\n"
    message=message+"This user has submitted " + str(submissioncount) + " rage comics before this one.\n\n"
    if submissioncount == 0:
        message=message+"Welcome to fffffffuuuuuuuuuuuu!\n\n"
    else:
        message=message+"STOP RIGHT THERE, CRIMINAL SCUM!\n\n"
        message=message+"Unless I am mistaken, you are trying to use the [first] tag to get more karma. Shame on you. Shame. On. You.\n\n"

    message=message+"\n\n*This comment generated by an automated bot.*"
    url="http://www.reddit.com/api/comment"
    values={'thing_id':name, 'text':message, 'uh':modhash}
    data=urllib.urlencode(values)
    req=urllib2.Request(url,data)
    time.sleep(660)
    response=urlOpener.open(req)
    text=response.read()
    jsonobj=json.loads(text)
    if submissioncount > 0:
        db.insert(name, False)
    else:
        db.insert(name, True)


def main():
    db=database()
    auth=login()
    while(True):
        search(auth, db)
        time.sleep(480)
    
if __name__ == '__main__':
    main()
